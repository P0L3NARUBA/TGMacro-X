<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        nwMAAAAASUVORK5CYII=
</value>
  </data>
</root>